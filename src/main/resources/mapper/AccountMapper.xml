<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqjtu.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.cqjtu.model.Account" >
    <id column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="account_status" property="accountStatus" jdbcType="VARCHAR" />
    <result column="status_name" property="statusName" jdbcType="VARCHAR" />
    <result column="startNum" property="startNum" jdbcType="INTEGER" />
    <result column="endNum" property="endNum" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Base_Column_List" >
    account_id, account_name, password, role_id,real_name,account_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from account
    where account_id = #{accountId,jdbcType=INTEGER}
  </select>

  <select id="selectAccount" resultMap="BaseResultMap">
    <if test="startNum != null and endNum != null">
        select * from(
    </if>
    select account_id, account_name, 
           password, real_name,account_status,
           b.role_id role_id,b.role_name,
           (case account_status when '1' then '正常'
            else '停用' end) status_name
     <if test="startNum != null and endNum != null">
        ,row_number()over(order by account_id) rownum
    </if>
    from account a,role b
    where a.role_id=b.role_id
      <if test="accountId != null" >
        and account_id =  #{accountId,jdbcType=INTEGER}
      </if>
      <if test="accountName != null" >
        and account_name like '%${accountName}%'
      </if>
      <if test="realName != null" >
        and real_name like '%${realName}%'
      </if>
      <if test="password != null" >
        and password = #{password,jdbcType=VARCHAR}
      </if>
      <if test="roleId != null" >
        and b.role_id = #{roleId,jdbcType=INTEGER}
      </if>
      <if test="accountStatus != null" >
        and account_status = #{accountStatus,jdbcType=VARCHAR}
      </if>
       <if test="startNum != null and endNum != null">
        ) a
        where a.rownum &gt; #{startNum,jdbcType=INTEGER} 
          and a.rownum &lt; #{endNum,jdbcType=INTEGER}
       </if>
  </select>

  <select id="countAccounts" resultMap="BaseResultMap">
    select count(*) number
    from account a,role b
    where a.role_id=b.role_id
      <if test="accountId != null" >
        and account_id =  #{accountId,jdbcType=INTEGER}
      </if>
      <if test="accountName != null" >
        and account_name like '%${accountName}%'
      </if>
      <if test="realName != null" >
        and real_name like '%${realName}%'
      </if>
      <if test="password != null" >
        and password = #{password,jdbcType=VARCHAR}
      </if>
      <if test="roleId != null" >
        and b.role_id = #{roleId,jdbcType=INTEGER}
      </if>
      <if test="accountStatus != null" >
        and account_status = #{accountStatus,jdbcType=VARCHAR}
      </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from account
    where account_id = #{accountId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cqjtu.model.Account">
     <selectKey resultType="_int" order="AFTER" keyProperty="accountId">
           SELECT @@IDENTITY AS account_id
      </selectKey>
    insert into account ( account_name, password, role_id)
    values ( #{accountName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cqjtu.model.Account" >
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="accountName != null" >
        account_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="accountStatus != null" >
        account_Status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null" >
        #{accountStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id ="insertAccountsOfList" parameterType="java.util.List" >
    insert into account (account_name, real_name,password, role_id,account_status)
     values
    <foreach collection ="list" item="account" index= "index" separator =".">
          ( #{account.accountName,jdbcType=VARCHAR}, #{account.realName,jdbcType=VARCHAR},#{account.password,jdbcType=VARCHAR}, 
      #{account.roleId,jdbcType=INTEGER},#{account.statusName,jdbcType=VARCHAR})
   </foreach >
  </insert >
  <update id="updateByPrimaryKeySelective" parameterType="com.cqjtu.model.Account" >
    update account
    <set >
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null" >
        account_status = #{accountStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cqjtu.model.Account" >
    update account
    set account_name = #{accountName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER}
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
    <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from account
    where account_name = #{accountName,jdbcType=VARCHAR}
  </select>
</mapper>