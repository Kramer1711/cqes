<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqjtu.mapper.QualityMapper" >
  <resultMap id="BaseResultMap" type="com.cqjtu.model.Quality" >
    <id column="quality_id" property="qualityId" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="BIGINT" />
    <result column="quality_sum_score" property="qualitySumScore" jdbcType="INTEGER" />
    <result column="comprehensive_quality_score" property="comprehensiveQualityScore" jdbcType="DOUBLE" />
    <result column="academic_year" property="academicYear" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
	<!-- 连表查询综合素质审核情况返回map -->
	<resultMap id="AuditSituationMap" type="java.util.Map">
		<result column="quality_tiem_id" javaType="java.lang.Integer" jdbcType="INTEGER" property="qualityTiemId" />
		<result column="item_name" javaType="java.lang.String" jdbcType="VARCHAR" property="itemName" />
		<result column="item_status" javaType="java.lang.String" jdbcType="VARCHAR" property="itemStatus" />
		<result column="item_evidence_url" javaType="java.lang.String" jdbcType="VARCHAR" property="evidenceUrl" />
		<result column="type_name" javaType="java.lang.String" jdbcType="VARCHAR" property="typeName" />
		<result column="item_score" javaType="java.lang.String" jdbcType="VARCHAR" property="itemScore" />
		<result column="quality_type_id" javaType="java.lang.String" jdbcType="VARCHAR" property="qualityTypeId" />
	</resultMap>
	<sql id="Base_Column_List">
		quality_id, student_id, quality_sum_score, comprehensive_quality_score,
		academic_year,
		status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from quality
    where quality_id = #{qualityId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from quality
    where quality_id = #{qualityId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cqjtu.model.Quality" >
    insert into quality (quality_id, student_id, quality_sum_score, 
      comprehensive_quality_score, academic_year, 
      status)
    values (#{qualityId,jdbcType=INTEGER}, #{studentId,jdbcType=BIGINT}, #{qualitySumScore,jdbcType=INTEGER}, 
      #{comprehensiveQualityScore,jdbcType=DOUBLE}, #{academicYear,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cqjtu.model.Quality" >
    insert into quality
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="qualityId != null" >
        quality_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="qualitySumScore != null" >
        quality_sum_score,
      </if>
      <if test="comprehensiveQualityScore != null" >
        comprehensive_quality_score,
      </if>
      <if test="academicYear != null" >
        academic_year,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="qualityId != null" >
        #{qualityId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="qualitySumScore != null" >
        #{qualitySumScore,jdbcType=INTEGER},
      </if>
      <if test="comprehensiveQualityScore != null" >
        #{comprehensiveQualityScore,jdbcType=DOUBLE},
      </if>
      <if test="academicYear != null" >
        #{academicYear,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cqjtu.model.Quality" >
    update quality
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="qualitySumScore != null" >
        quality_sum_score = #{qualitySumScore,jdbcType=INTEGER},
      </if>
      <if test="comprehensiveQualityScore != null" >
        comprehensive_quality_score = #{comprehensiveQualityScore,jdbcType=DOUBLE},
      </if>
      <if test="academicYear != null" >
        academic_year = #{academicYear,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where quality_id = #{qualityId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cqjtu.model.Quality" >
    update quality
    set student_id = #{studentId,jdbcType=BIGINT},
      quality_sum_score = #{qualitySumScore,jdbcType=INTEGER},
      comprehensive_quality_score = #{comprehensiveQualityScore,jdbcType=DOUBLE},
      academic_year = #{academicYear,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where quality_id = #{qualityId,jdbcType=INTEGER}
  </update>
	<select id="selectAuditSituationList"
		parameterType="java.util.Map" resultMap="AuditSituationMap">
		SELECT c.quality_tiem_id as qualityItemId,c.item_name as
		itemName,d.item_status as itemStatus,c.item_evidence_url as evidenceUrl,
		e.type_name as typeName,c.item_score as itemScore,c.quality_type_id as typeId
		FROM student_info as a
		INNER JOIN
		quality as b ON a.student_id = b.student_id
		<if test="academicYear != null">
			and b.academic_year = #{academicYear,jdbcType=VARCHAR}
		</if>
		INNER JOIN quality_item as c ON b.quality_id = c.quality_id
		INNER JOIN quality_item_audit as d ON c.quality_tiem_id = d.quality_item_id
		INNER JOIN item_type as e ON e.item_type_id = c.quality_type_id
		<where>
			<!-- <if test="studentId != null"> -->
			a.student_id = #{studentId,jdbcType=BIGINT}
			<!-- </if> -->
		</where>
	</select>
    <select id="selectByStudentId" parameterType="java.util.Map" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from quality 
		<where>
			<if test="studentId != null">
				student_id = #{studentId,jdbcType=BIGINT}
			</if>
			<if test="academicYear != null">
			 and academic_year = #{academicYear,jdbcType=VARCHAR}
			</if>
			<if test="status != null and status != &quot;&quot;">
			 and status = #{status,jdbcType=VARCHAR}
			</if>
		</where>
  	</select>

</mapper>