<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqjtu.mapper.AcademicYearMapper" >
  <resultMap id="BaseResultMap" type="com.cqjtu.model.AcademicYear" >
    <id column="academic_year_id" property="academicYearId" jdbcType="INTEGER" />
    <result column="academic_year" property="academicYear" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="startNum" property="startNum" jdbcType="INTEGER" />
    <result column="endNum" property="endNum" jdbcType="INTEGER" />
  </resultMap>
  <select id="selectSelective" resultMap="BaseResultMap" parameterType="com.cqjtu.model.AcademicYear">
    <if test="startNum != null and endNum != null">
        select * from(
    </if>
    select academic_year_id, academic_year,status
     <if test="startNum != null and endNum != null">
        ,row_number()over(order by academic_year_id) rownum
    </if>
    from academic_year
      where 1 = 1
      <if test="academicYearId != null" >
        and academic_year_id  =  #{academicYearId,jdbcType=INTEGER}
      </if>
      <if test="academicYear != null" >
        and academic_year = #{academicYear,jdbcType=VARCHAR}
      </if>
      <if test="status != null" >
        and status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="startYear != null" >
         and PARSENAME(REPLACE(academic_year,'-','.'),2) &gt;= #{startYear,jdbcType=VARCHAR}
      </if>
      <if test="endYear != null" >
        and PARSENAME(REPLACE(academic_year,'-','.'),1) &lt;= #{endYear,jdbcType=VARCHAR}
      </if>
       <if test="startNum != null and endNum != null">
        ) a
        where a.rownum &gt; #{startNum,jdbcType=INTEGER} 
          and a.rownum &lt; #{endNum,jdbcType=INTEGER}
       </if>  
  </select>
  <select id="countSelective" resultType="java.lang.Integer" parameterType="com.cqjtu.model.AcademicYear">
    select count(1)
    from academic_year
      where 1 = 1
      <if test="academicYearId != null" >
        and academic_year_id  =  #{academicYearId,jdbcType=INTEGER}
      </if>
      <if test="academicYear != null" >
        and academic_year = #{academicYear,jdbcType=VARCHAR}
      </if>
      <if test="status != null" >
        and status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="startYear != null" >
         and PARSENAME(REPLACE(academic_year,'-','.'),2) &gt;= #{startYear,jdbcType=VARCHAR}
      </if>
      <if test="endYear != null" >
        and PARSENAME(REPLACE(academic_year,'-','.'),1) &lt;= #{endYear,jdbcType=VARCHAR}
      </if>
  </select>
  <insert id="insert" parameterType="com.cqjtu.model.AcademicYear" >
    insert into academic_year (academic_year_id, academic_year, status
      )
    values (#{academicYearId,jdbcType=INTEGER}, #{academicYear,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cqjtu.model.AcademicYear" >
    insert into academic_year
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="academicYearId != null" >
        academic_year_id,
      </if>
      <if test="academicYear != null" >
        academic_year,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="academicYearId != null" >
        #{academicYearId,jdbcType=INTEGER},
      </if>
      <if test="academicYear != null" >
        #{academicYear,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cqjtu.model.AcademicYear">
     update academic_year
    <set>
      <if test="academicYear != null" >
        academic_year = #{academicYear,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where academic_year_id = #{academicYearId,jdbcType=INTEGER}
  </update>
    <select id="countAccounts" resultMap="BaseResultMap">
    select count(*) number
    from account a,role b
    where a.role_id=b.role_id
      <if test="accountId != null" >
        and account_id =  #{accountId,jdbcType=INTEGER}
      </if>
      <if test="accountName != null" >
        and account_name like '%${accountName}%'
      </if>
      <if test="realName != null" >
        and real_name like '%${realName}%'
      </if>
      <if test="password != null" >
        and password = #{password,jdbcType=VARCHAR}
      </if>
      <if test="roleId != null" >
        and b.role_id = #{roleId,jdbcType=INTEGER}
      </if>
      <if test="accountStatus != null" >
        and account_status = #{accountStatus,jdbcType=VARCHAR}
      </if>
  </select>
  	<select id="selectStatusIsDoing" resultType="java.lang.String">
		select academic_year
		from academic_year
		<where>
			status = 'doing'
		</where>
	</select>
  
</mapper>