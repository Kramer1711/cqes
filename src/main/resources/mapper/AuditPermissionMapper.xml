<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqjtu.mapper.AuditPermissionMapper" >
  <resultMap id="BaseResultMap" type="com.cqjtu.model.AuditPermission" >
    <id column="audit_permission_id" property="auditPermissionId" jdbcType="INTEGER" />
    <result column="auditor_id" property="auditorId" jdbcType="INTEGER" />
    <result column="college_id" property="collegeId" jdbcType="INTEGER" />
    <result column="major_id" property="majorId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
   <!-- 代理审核人相关信息 -->
  <resultMap id="AgentAuditInfo" type="java.util.Map" >
    <result column="audit_permission_id" property="auditPermissionId" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="BIGINT" />
    <result column="real_name" property="name" jdbcType="VARCHAR" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="college_id" property="collegeId" jdbcType="INTEGER" />
    <result column="college_name" property="collegeName" jdbcType="VARCHAR" />
    <result column="major_id" property="majorId" jdbcType="INTEGER" />
    <result column="major_name" property="majorName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    audit_permission_id, auditor_id, college_id, major_id, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from audit_permission
    where audit_permission_id = #{auditPermissionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from audit_permission
    where audit_permission_id = #{auditPermissionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cqjtu.model.AuditPermission" >
        <selectKey resultType="_int" order="AFTER" keyProperty="auditPermissionId">
           SELECT @@IDENTITY AS audit_permission_id
      </selectKey>
    insert into audit_permission ( auditor_id, college_id, 
      major_id, status)
    values ( #{auditorId,jdbcType=INTEGER}, #{collegeId,jdbcType=INTEGER}, 
      #{majorId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cqjtu.model.AuditPermission" >
    insert into audit_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="auditPermissionId != null" >
        audit_permission_id,
      </if>
      <if test="auditorId != null" >
        auditor_id,
      </if>
      <if test="collegeId != null" >
        college_id,
      </if>
      <if test="majorId != null" >
        major_id,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="auditPermissionId != null" >
        #{auditPermissionId,jdbcType=INTEGER},
      </if>
      <if test="auditorId != null" >
        #{auditorId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null" >
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null" >
        #{majorId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cqjtu.model.AuditPermission" >
    update audit_permission
    <set >
      <if test="auditorId != null" >
        auditor_id = #{auditorId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null" >
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null" >
        major_id = #{majorId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where audit_permission_id = #{auditPermissionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cqjtu.model.AuditPermission" >
    update audit_permission
    set auditor_id = #{auditorId,jdbcType=INTEGER},
      college_id = #{collegeId,jdbcType=INTEGER},
      major_id = #{majorId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where audit_permission_id = #{auditPermissionId,jdbcType=INTEGER}
  </update>
    <!-- 通过账号获取 -->
  <select id="selectByAuditorId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from audit_permission
    where auditor_id = #{accountId}
  </select>
  	 <!-- 搜索：获取符合查找条件的记录条数 -->
	<select id="getTotal" resultType="java.lang.Integer" parameterType="java.util.Map">
	  SELECT COUNT(audit_permission_id) 
	  FROM audit_permission a
	  LEFT JOIN account b ON a.auditor_id = b.account_id
	  LEFT JOIN student e ON e.account_id = a.auditor_id
		<where>
			(student_id = #{key} OR real_name LIKE '%'+#{key}+'%')
			<if test="collegeId != '' and collegeId != null and collegeId != -1">
				AND a.college_id = #{collegeId}
			</if>
			<if test="majorId != '' and majorId != null and majorId != -1" >
				AND a.major_id = #{majorId}
			</if>
			<if test="status != '' and status != null and status != -1">
				AND a.status = #{status}
			</if>
		</where>
	</select>
	
  	<!-- 搜索：返回分页记录 -->
	<select id="searchAgentAudit" resultMap="AgentAuditInfo" parameterType="java.util.Map">
	SELECT * FROM (   
		SELECT *,ROW_NUMBER() OVER(ORDER BY ${sort} ${order}) AS RowNumber from (
		
		SELECT audit_permission_id AS auditPermissionId,student_id AS studentId,real_name AS name,b.account_id,a.college_id,
			college_name AS collegeName,a.major_id,major_name AS majorName,a.status 
		FROM audit_permission a 
		LEFT JOIN account b ON a.auditor_id = b.account_id
		LEFT JOIN college c ON c.college_id = a.college_id
		LEFT JOIN major d ON d.major_id = a.major_id
		LEFT JOIN student e ON e.account_id = a.auditor_id
		<where>
			(student_id = #{key} OR real_name LIKE '%'+#{key}+'%')
			<if test="collegeId != '' and collegeId != null and collegeId != -1">
				AND a.college_id = #{collegeId}
			</if>
			<if test="majorId != '' and majorId != null and majorId != -1" >
				AND a.major_id = #{majorId}
			</if>
			<if test="status != '' and status != null and status != -1">
				AND a.status = #{status}
			</if>
		</where>
		)as T
	) as T  
	where T.RowNumber BETWEEN (#{page}-1)*#{rows} and #{page}*#{rows}
	</select>
</mapper>