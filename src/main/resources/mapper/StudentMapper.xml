<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqjtu.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.cqjtu.model.Student" >
    <id column="student_id" property="studentId" jdbcType="BIGINT" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
  </resultMap>
  	<!-- 连表查询学生信息返回map -->
  	<resultMap id="studentInfo" type="java.util.Map" >
       <result column="student_id" property="studentId" javaType="java.lang.Long" jdbcType="BIGINT"/>
       <result column="student_name" property="studentName" javaType="java.lang.String" jdbcType="VARCHAR"/>
       <result column="major_name" property="studentMajor" javaType="java.lang.String" jdbcType="VARCHAR"/>
       <result column="college_name" property="studentCollege" javaType="java.lang.String" jdbcType="VARCHAR"/>
       <result column="grade" property="studentGrade" javaType="java.lang.Integer" jdbcType="INTEGER"/>
    </resultMap>
  
  <sql id="Base_Column_List" >
    student_id, account_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from student
    where student_id = #{studentId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cqjtu.model.Student" >
    insert into student (student_id, account_id)
    values (#{studentId,jdbcType=BIGINT}, #{accountId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cqjtu.model.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cqjtu.model.Student" >
    update student
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cqjtu.model.Student" >
    update student
    set account_id = #{accountId,jdbcType=INTEGER}
    where student_id = #{studentId,jdbcType=BIGINT}
  </update>
   	<!-- 通过用户名查找学生 -->
    <select id="selectByAccountId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where account_id = #{accountId,jdbcType=INTEGER}
  </select>
	<!-- 搜索，返回全部记录 -->
	<select id="search" resultMap="studentInfo" parameterType="java.util.Map">
		SELECT * FROM (   
			SELECT *,ROW_NUMBER() OVER(ORDER BY ${sortOrder} ) AS RowNumber from (
			select a.student_id as studentId,a.student_name as studentName,
				b.major_name as studentMajor,c.college_name as studentCollege,a.grade as studentGrade
				from student_info as a
				inner join major as b on a.major_id = b.major_id
				inner join college as c on b.college_id = c.college_id
			<where>
				(student_name like '%'+#{key}+'%' or student_id like '%'+#{key}+'%')
				<if test="majorId != null and majorId != '' and majorId != '-1'" >
	        		and b.major_id = #{majorId,　jdbcType=INTEGER}
	      		</if>
				<if test="collegeId != null and collegeId != '' and collegeId != '-1'" >
	        		and c.college_id = #{collegeId,jdbcType=INTEGER}
				</if>
				<if test="studentId != null">
					and student_id != #{studentId}
				</if>
				<if test="grade != null and grade != '' and grade != -1">
					and grade = #{grade}
				</if>
			</where>
			) as T
		)as T 
		<where>
			T.RowNumber BETWEEN ((#{page}-1) * #{rows} + 1 )AND #{page}*#{rows}
		</where>   
    </select>
	<!-- 搜索结果总数 -->
	<select id="getTotal" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(student_id)
			from student_info as a
			inner join major as b on a.major_id = b.major_id
			inner join college as c on b.college_id = c.college_id
		<where>
			(student_name like '%'+#{key}+'%' or student_id like '%'+#{key}+'%')
			<if test="majorId != '' and majorId != null and majorId != -1" >
        		and b.major_id = #{majorId}
      		</if>
			<if test="collegeId != '' and collegeId != null and collegeId != -1" >
        		and c.college_id = #{collegeId}
			</if>
			<if test="studentId != null">
				and student_id != #{studentId}
			</if>
			<if test="grade != null and grade != '' and grade != -1">
				and grade = #{grade}
			</if>
		</where>
    </select>
	<!-- 获取年级 -->
	<select id="getGrades" resultType="java.lang.String" >
		select grade
		from student_info
		group by grade
    </select>
</mapper>