<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqjtu.mapper.StudentInfoMapper" >
  <resultMap id="BaseResultMap" type="com.cqjtu.model.StudentInfo" >
    <id column="student_info_id" property="studentInfoId" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="BIGINT" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="student_sex" property="studentSex" jdbcType="VARCHAR" />
    <result column="student_birthday" property="studentBirthday" jdbcType="VARCHAR" />
    <result column="major_id" property="majorId" jdbcType="INTEGER" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
    <result column="classes" property="classes" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.cqjtu.model.StudentInfo" extends="BaseResultMap" >
    <result column="other" property="other" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    student_info_id, student_id, student_name, student_sex, student_birthday, major_id, 
    grade, classes
  </sql>
  <sql id="Blob_Column_List" >
    other
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from student_info
    where student_info_id = #{studentInfoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student_info
    where student_info_id = #{studentInfoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cqjtu.model.StudentInfo" >
      <selectKey resultType="_int" order="AFTER" keyProperty="studentInfoId">
           SELECT @@IDENTITY AS student_info_id
      </selectKey>
    insert into student_info ( student_id, student_name, 
      student_sex, student_birthday, major_id, 
      grade, classes, other
      )
    values ( #{studentId,jdbcType=BIGINT}, #{studentName,jdbcType=VARCHAR}, 
      #{studentSex,jdbcType=VARCHAR}, #{studentBirthday,jdbcType=VARCHAR}, #{majorId,jdbcType=INTEGER}, 
      #{grade,jdbcType=INTEGER}, #{classes,jdbcType=INTEGER}, #{other,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cqjtu.model.StudentInfo" >
    insert into student_info
          <selectKey resultType="_int" order="AFTER" keyProperty="studentInfoId">
           SELECT @@IDENTITY AS student_info_id
      </selectKey>
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentInfoId != null" >
        student_info_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="studentSex != null" >
        student_sex,
      </if>
      <if test="studentBirthday != null" >
        student_birthday,
      </if>
      <if test="majorId != null" >
        major_id,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="classes != null" >
        classes,
      </if>
      <if test="other != null" >
        other,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentInfoId != null" >
        #{studentInfoId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentSex != null" >
        #{studentSex,jdbcType=VARCHAR},
      </if>
      <if test="studentBirthday != null" >
        #{studentBirthday,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null" >
        #{majorId,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="classes != null" >
        #{classes,jdbcType=INTEGER},
      </if>
      <if test="other != null" >
        #{other,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cqjtu.model.StudentInfo" >
    update student_info
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentSex != null" >
        student_sex = #{studentSex,jdbcType=VARCHAR},
      </if>
      <if test="studentBirthday != null" >
        student_birthday = #{studentBirthday,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null" >
        major_id = #{majorId,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="classes != null" >
        classes = #{classes,jdbcType=INTEGER},
      </if>
      <if test="other != null" >
        other = #{other,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where student_info_id = #{studentInfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cqjtu.model.StudentInfo" >
    update student_info
    set student_id = #{studentId,jdbcType=BIGINT},
      student_name = #{studentName,jdbcType=VARCHAR},
      student_sex = #{studentSex,jdbcType=VARCHAR},
      student_birthday = #{studentBirthday,jdbcType=VARCHAR},
      major_id = #{majorId,jdbcType=INTEGER},
      grade = #{grade,jdbcType=INTEGER},
      classes = #{classes,jdbcType=INTEGER},
      other = #{other,jdbcType=LONGVARCHAR}
    where student_info_id = #{studentInfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cqjtu.model.StudentInfo" >
    update student_info
    set student_id = #{studentId,jdbcType=BIGINT},
      student_name = #{studentName,jdbcType=VARCHAR},
      student_sex = #{studentSex,jdbcType=VARCHAR},
      student_birthday = #{studentBirthday,jdbcType=VARCHAR},
      major_id = #{majorId,jdbcType=INTEGER},
      grade = #{grade,jdbcType=INTEGER},
      classes = #{classes,jdbcType=INTEGER}
    where student_info_id = #{studentInfoId,jdbcType=INTEGER}
  </update>
  	<!-- 通过学号查找学生信息 -->
    <select id="selectByStudentId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from student_info
    where student_id = #{studentId,jdbcType=BIGINT}
  </select>
  
      <resultMap id="InfoMap" type="java.util.Map" >
	    <result column="student_name" property="name" jdbcType="VARCHAR" />
	    <result column="student_sex" property="sex" jdbcType="VARCHAR" />
	    <result column="student_birthday" property="phoneNumber" jdbcType="VARCHAR" />
	    <result column="student_phonenumber" property="birthday" jdbcType="VARCHAR" />
	    <result column="major_id" property="majorId" jdbcType="INTEGER" />
	    <result column="major_name" property="majorName" jdbcType="VARCHAR" />
	    <result column="college_id" property="collegeId" jdbcType="INTEGER" />
	    <result column="college_name" property="collegeName" jdbcType="VARCHAR" />
    </resultMap>
    <!-- 获取学生个人信息 -->
    <select id="selectPersonalInfoByAccountId" resultMap="InfoMap" parameterType="java.lang.Integer">
		SELECT c.student_name,c.student_sex,c.student_birthday,
		c.student_phonenumber,d.major_id,d.major_name,e.college_id,e.college_name
		FROM account a
		LEFT JOIN student b ON a.account_id = b.account_id
		LEFT JOIN student_info c ON c.student_id = b.student_id
		LEFT JOIN major d ON d.major_id = c.major_id
		LEFT JOIN college e ON e.college_id = d.college_id
		WHERE a.account_id = #{accountId}
  	</select>
</mapper>